{"version":3,"file":"nl2br-pipe.js","sources":["nl2br-pipe/lib/nl2br.pipe.ts","nl2br-pipe/lib/nl2br.module.ts"],"names":[],"mappings":";;;;;;;;;AAAA,MAMa,SAAS;AAAI;AAAS;AAEtB;AAAS,IAApB,YAAoB,SAAuB;AAC5C,QADqB,cAAS,GAAT,SAAS,CAAc;AAAE,KAC5C;AAEH;AAAS;AAAyB;AAC5B;AAAoB;AAAS,IADjC,SAAS,CAAC,KAAa,EAAE,kBAA4B;AAAK,QACxD,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;AAClC,YAAK,OAAO,KAAK,CAAC;AAClB,SAAI;AACJ;AACK,YADE,MAAW;AAClB;AAA0B,cAAjB,UAAU,GAAG,KAAK,CAAC,OAAO,CAAC,iBAAiB,EAAE,QAAQ,CAAC;AAEjE,QAAI,IAAI,CAAC,OAAO,IAAI,OAAO,CAAC,KAAK,KAAK,GAAG,EAAE;AAC1C,YAAK,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,uBAAuB,CAAC,UAAU,CAAC,CAAC;AACjE,SAAI;AAAE,aAAI,IAAI,kBAAkB,EAAE;AAClC,YAAK,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;AACxE,SAAI;AAAE,aAAI;AACV,YAAK,MAAM,GAAG,UAAU,CAAC;AACzB,SAAI;AAEL,QAAI,OAAO,MAAM,CAAC;AACjB,KAAE;AAEH;uCA1BC,IAAI,SAAC,mBACJ,IAAI,EAAE,OAAO,eACd;oGACK;AAAE;AAAoB;AAEf,YAPJ,YAAY;AAAI;;;;;;6EAAE;AAAC;AAAC;AAAK;AAGhC;AAKD;ACTD,MASa,eAAe;AAAI;6CAN/B,QAAQ,SAAC,mBACR,YAAY,EAAE,CAAC;IAAS,CAAC,mBACzB,OAAO,EAAE,EACR,mBACD,OAAO,EAAE,CAAC,SAAS,CAAC;AACrB;;;;;;;;;wKACK;AAAC;AAAC;AAAK;AACE;AAAsH;AAAI;AAAC;AAAK;AAAmC;AAAsxBA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAJA,AAAA,ACDA,AASA,AAAA,AANA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA","sourcesContent":["import { Pipe, PipeTransform, SecurityContext, VERSION } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'nl2br'\n})\nexport class Nl2BrPipe implements PipeTransform {\n\n  constructor(private sanitizer: DomSanitizer) {\n  }\n\n  transform(value: string, sanitizeBeforehand?: boolean): string {\n    if (typeof value !== 'string') {\n      return value;\n    }\n    let result: any;\n    const textParsed = value.replace(/(?:\\r\\n|\\r|\\n)/g, '<br />');\n\n    if (!VERSION || VERSION.major === '2') {\n      result = this.sanitizer.bypassSecurityTrustHtml(textParsed);\n    } else if (sanitizeBeforehand) {\n      result = this.sanitizer.sanitize(SecurityContext.HTML, textParsed);\n    } else {\n      result = textParsed;\n    }\n\n    return result;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Nl2BrPipe } from './nl2br.pipe';\n\n@NgModule({\n  declarations: [Nl2BrPipe],\n  imports: [\n  ],\n  exports: [Nl2BrPipe]\n})\nexport class Nl2BrPipeModule { }\n"]}